location /__data/ {
	internal;
	alias /data/;

	expires	1M;

	location ~ ^/__data/(?<sourceFile>.+)\.crop\.(?<cropWidth>\d+)x(?<cropHeight>\d+)x(?<srcX>\d+)x(?<srcY>\d+)\.(?<ext>[a-z]+)$ {
		set $filePath	/data/$sourceFile.crop.${cropWidth}x${cropHeight}x${srcX}x${srcY}.$ext;
		root			/;
		try_files		$filePath @image_crop_server;
	}
	location ~ ^/__data/(?<sourceFile>.+)\.crop\.(?<cropWidth>\d+)x(?<cropHeight>\d+)x(?<srcX>\d+)x(?<srcY>\d+)\.resize\.(?<resizeWidth>[\d\-]+)x(?<resizeHeight>[\d\-]+)\.(?<ext>[a-z]+)$ {
		set $filePath	/data/$sourceFile.crop.${cropWidth}x${cropHeight}x${srcX}x${srcY}.resize.${resizeWidth}x${resizeHeight}.$ext;
		root			/;
		try_files		$filePath @image_crop_server;
	}
	location ~ ^/__data/(?<sourceFile>.+)\.resize\.(?<resizeWidth>[\d\-]+)x(?<resizeHeight>[\d\-]+)\.(jpe?g|gif|png)$ {
		alias						/data/$sourceFile;
		try_files					"" =404;
		image_filter				resize	$resizeWidth	$resizeHeight;
		image_filter_buffer			40M;
		image_filter_jpeg_quality	96;
		image_filter_sharpen		75;
	}
}
location @image_crop_server {
	#
	#	Documentation:	https://github.com/openresty/lua-nginx-module#installation
	#					https://github.com/leafo/magick
	#
	#	For future:		https://github.com/ittner/lua-gd/tree/master/demos
	#
	content_by_lua "
		local filePath, sourceFile, cropWidth, cropHeight, srcX, srcY, resizeWidth, resizeHeight, extension =
			ngx.var.filePath, '/data/' .. ngx.var.sourceFile, ngx.var.cropWidth, ngx.var.cropHeight, ngx.var.srcX, ngx.var.srcY, ngx.var.resizeWidth, ngx.var.resizeHeight, ngx.var.ext
		if resizeHeight == '-' then
			resizeHeight = ''
		end
		if resizeWidth == '-' then
			resizeWidth = ''
		end

		local magick = require('magick')

		-- make sure the file exists
		local file = io.open(sourceFile)
		if not file then
			ngx.status = ngx.HTTP_NOT_FOUND
			ngx.header['Content-type'] = 'text/html'
			ngx.say('not found')
			ngx.exit(0)
		end

		-- crop and resizing
		magick.thumb(sourceFile, cropWidth .. 'x' .. cropHeight .. '+' .. srcX .. '+' .. srcY, filePath)
		if resizeWidth or resizeHeight then
			magick.thumb(filePath, resizeWidth .. 'x' .. resizeHeight, filePath)
		end

		-- return
		ngx.exec(ngx.var.request_uri)
	";
}
